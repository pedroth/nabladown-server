name: Build and Release

permissions:
  contents: write
  actions: read
  packages: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: Install dependencies
        run: bun install

      - name: Build Nabladown Server
        run: |
          if ($env:RUNNER_OS -eq "Linux") {
            bun run build-linux
          } else {
            bun run build-windows
          }
          Write-Host "Build complete for $env:RUNNER_OS"
        shell: pwsh

      - name: Verify Build Output
        run: |
          if ($env:RUNNER_OS -eq "Linux") {
            if (Test-Path ./nabladown-server) {
              Write-Host "✅ Linux build exists"
            } else {
              Write-Error "❌ Linux build missing"
            }
          } else {
            if (Test-Path ./nabladown-server.exe) {
              Write-Host "✅ Windows build exists"
            } else {
              Write-Error "❌ Windows build missing"
            }
          }
        shell: pwsh

      - name: Debug Artifacts
        run: |
          Get-ChildItem -Force
          Write-Host "Current directory: $PWD"
        shell: pwsh

      - name: Upload Nabladown Server Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nabladown-server-${{ matrix.os }}
          path: |
            nabladown-server
            nabladown-server.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nabladown-server-ubuntu-latest/nabladown-server
          asset_name: nabladown-server-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nabladown-server-windows-latest/nabladown-server.exe
          asset_name: nabladown-server-windows.exe
          asset_content_type: application/octet-stream
